{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/anonymous-posting/webpack/bootstrap","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/define property getters","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/anonymous-posting/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/utils/humanTime']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/models/Post']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/Composer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/ReplyComposer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/ReplyPlaceholder']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/TerminalPost']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/PostsUserPage']\"","webpack://@clarkwinkelmann/anonymous-posting/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Composer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ReplyComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ReplyPlaceholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/TerminalPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostsUserPage'];","import app from 'flarum/forum/app';\nimport {extend, override} from 'flarum/common/extend';\nimport humanTime from 'flarum/common/utils/humanTime';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport Switch from 'flarum/common/components/Switch';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Post from 'flarum/common/models/Post';\nimport Forum from 'flarum/common/models/Forum';\nimport User from 'flarum/common/models/User';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Composer from 'flarum/forum/components/Composer';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport ReplyComposer from 'flarum/forum/components/ReplyComposer';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport ReplyPlaceholder from 'flarum/forum/components/ReplyPlaceholder';\nimport TerminalPost from 'flarum/forum/components/TerminalPost';\nimport PostsUserPage from 'flarum/forum/components/PostsUserPage';\n\nfunction extendComposerHeaderItems(this: DiscussionComposer | ReplyComposer, items: ItemList<any>) {\n    if (!app.forum.attribute('canAnonymousPost')) {\n        return;\n    }\n\n    const helpText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.composerControls.anonymizeHelp');\n    const helpTextPosition = app.forum.attribute('anonymousHelpTextPosition');\n\n    items.add('anonymous-posting', Switch.component({\n        className: helpTextPosition === 'visible' ? 'AnonymousCheckbox--multiline' : '',\n        state: !!app.composer.fields!.isAnonymous,\n        onchange: (value: boolean) => {\n            app.composer.fields!.isAnonymous = value;\n        },\n    }, m('span.AnonymousCheckboxLabel', [\n        app.translator.trans('clarkwinkelmann-anonymous-posting.forum.composerControls.anonymize'),\n        helpTextPosition === 'tooltip' ? [' ', Tooltip.component({\n            text: helpText,\n        }, icon('fas fa-info-circle', {\n            className: 'AnonymousCheckboxInfo',\n        }))] : null,\n        helpTextPosition === 'visible' ? m('.helpText', helpText) : null,\n    ])), -10);\n}\n\nfunction extendComposerData(this: DiscussionComposer | ReplyComposer, data: any) {\n    if (app.composer.fields!.isAnonymous) {\n        data.isAnonymous = true;\n    }\n}\n\nfunction extendComposerView(this: DiscussionComposer | ReplyComposer, vdom: any) {\n    if (!app.composer.fields!.isAnonymous) {\n        return;\n    }\n\n    if (!vdom || !Array.isArray(vdom.children)) {\n        return;\n    }\n\n    // Loop through <ConfirmDocumentUnload> children\n    vdom.children.forEach(vdom => {\n        if (!vdom || !Array.isArray(vdom.children)) {\n            return;\n        }\n\n        // Loop through .ComposerBody children\n        vdom.children.forEach((child, index) => {\n            if (!child || !child.attrs || !child.attrs.className || child.attrs.className.indexOf('ComposerBody-avatar') === -1) {\n                return;\n            }\n\n            vdom.children[index] = anonymousAvatar(app.forum, '.ComposerBody-avatar');\n        });\n    });\n}\n\nfunction anonymousAvatar(post: Discussion | Post | Forum, className: string = '') {\n    const src = post.attribute('anonymousAvatarUrl');\n\n    if (src) {\n        return m('img.Avatar.Avatar--anonymous' + className, {\n            src,\n            alt: app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username'),\n        });\n    }\n\n    return m('span.Avatar.Avatar--anonymous' + className, app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.initials'));\n}\n\napp.initializers.add('anonymous-posting', () => {\n    extend(CommentPost.prototype, 'headerItems', function (items) {\n        // @ts-ignore\n        const post = this.attrs.post as Post;\n\n        if (!post.attribute('isAnonymous')) {\n            return;\n        }\n\n        items.setContent('user', m('.PostUser', m('h3', [\n            anonymousAvatar(post, '.PostUser-avatar'),\n            m('span.username', app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username')),\n        ])));\n\n        const anonymousUser = Model.hasOne<User>('anonymousUser').call(post);\n\n        if (!anonymousUser) {\n            if (!post.attribute('isAnonymousMe')) {\n                return;\n            }\n\n            let className = '.AnonymousPostPrivacyMine';\n            let tooltipText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.mineHelp');\n            let labelText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.mine');\n\n            if (app.current.matches(PostsUserPage)) {\n                className = '.AnonymousPostPrivacyProfile';\n                tooltipText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.profileHelp');\n                labelText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.profile');\n            }\n\n            items.add(\n                'anonymousUserPrivacy',\n                Tooltip.component({\n                    text: tooltipText,\n                }, m('span.AnonymousPostPrivacy' + className, labelText)),\n                90 // Just after the original user label\n            );\n\n            return;\n        }\n\n        // Provide an altered post object that the PostUser component can read the user from\n        const alteredPost = new Post({\n            ...post.data,\n            relationships: {\n                ...post.data.relationships,\n                user: post.data.relationships!.anonymousUser,\n            },\n        });\n\n        items.add(\n            'anonymousUser',\n            PostUser.component({\n                post: alteredPost,\n                cardVisible: this.cardVisible,\n                oncardshow: () => {\n                    this.cardVisible = true;\n                    m.redraw();\n                },\n                oncardhide: () => {\n                    this.cardVisible = false;\n                    m.redraw();\n                },\n            }),\n            90 // Just after the original user label\n        );\n    });\n\n    extend(ReplyPlaceholder.prototype, 'view', function (vdom0) {\n        if (!app.composer.fields!.isAnonymous) {\n            return;\n        }\n\n        if (!vdom0 || !Array.isArray(vdom0.children)) {\n            return;\n        }\n\n        // Loop through .Post children\n        vdom0.children.forEach(vdom1 => {\n            if (!vdom1 || !Array.isArray(vdom1.children)) {\n                return;\n            }\n\n            // Loop through .Post-header children\n            vdom1.children.forEach((vdom2) => {\n                if (!vdom2 || !Array.isArray(vdom2.children)) {\n                    return;\n                }\n\n                // Loop through .PostUser children\n                vdom2.children.forEach((vdom3, index3) => {\n                    if (!vdom3 || !Array.isArray(vdom3.children)) {\n                        return;\n                    }\n\n                    // Loop through <h3> children\n                    vdom3.children.forEach((child, index) => {\n                        if (!child || !child.attrs || !child.attrs.className) {\n                            return;\n                        }\n\n                        // Replace preview avatar\n                        if (child.attrs.className.indexOf('PostUser-avatar') !== -1) {\n                            vdom3.children[index] = anonymousAvatar(app.forum, '.PostUser-avatar');\n                        }\n\n                        // Replace preview username\n                        if (child.attrs.className === 'username') {\n                            child.text = app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username');\n                        }\n                    });\n\n                    // Remove ul.PostUser-badges which would show the actor's badges\n                    if (vdom3.attrs && vdom3.attrs.className && vdom3.attrs.className.indexOf('PostUser-badges') !== -1) {\n                        vdom2.children.splice(index3, 1);\n                    }\n                });\n            });\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        // @ts-ignore\n        const discussion = this.attrs.discussion as Discussion;\n\n        if (!discussion.attribute('isAnonymous')) {\n            return;\n        }\n\n        vdom.children.forEach(vdom => {\n            if (!vdom || !vdom.attrs || !vdom.attrs.className || vdom.attrs.className.indexOf('DiscussionListItem-content') === -1) {\n                return;\n            }\n\n            vdom.children.forEach(vdom => {\n                if (!vdom || vdom.tag !== Tooltip) {\n                    return;\n                }\n\n                vdom.attrs.text = app.translator.trans('core.forum.discussion_list.started_text', {\n                    username: app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username'),\n                    ago: humanTime(discussion.createdAt()),\n                });\n\n                vdom.children.forEach(vdom => {\n                    if (!vdom || vdom.tag !== Link) {\n                        return;\n                    }\n\n                    vdom.children = [\n                        anonymousAvatar(discussion),\n                    ];\n                });\n            });\n        });\n    });\n\n    override(TerminalPost.prototype, 'view', function (original, ...args) {\n        const discussion = this.attrs.discussion;\n\n        if (this.attrs.lastPost && discussion.replyCount()) {\n            if (discussion.lastPostedUser()) {\n                return original(...args);\n            }\n\n            // Loading discussion.lastPost for the sole purpose of getting post.isAnonymous would be detrimental to performance\n            // Instead we'll replace all \"[deleted] replied\" texts with a generic message that doesn't include a username\n\n            return m('span', [\n                icon('fas fa-reply'),\n                ' ',\n                app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionList.genericReplyText', {\n                    ago: humanTime(discussion.lastPostedAt()),\n                }),\n            ]);\n        }\n\n        if (!discussion.attribute('isAnonymous')) {\n            return original(...args);\n        }\n\n        return m('span', [\n            '', // Keep output the same as original method to maximise compatibility with other extensions\n            ' ',\n            app.translator.trans('core.forum.discussion_list.started_text', {\n                username: m('span.username', app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username')),\n                ago: humanTime(discussion.createdAt()),\n            }),\n        ]);\n    });\n\n    extend(CommentPost.prototype, 'oninit', function () {\n        this.subtree!.check(() => {\n            // @ts-ignore\n            const post = this.attrs.post as Post;\n            return post.attribute('isAnonymous');\n        });\n    });\n\n    extend(DiscussionComposer.prototype, 'headerItems', extendComposerHeaderItems);\n    extend(DiscussionComposer.prototype, 'data', extendComposerData);\n    extend(DiscussionComposer.prototype, 'view', extendComposerView);\n    extend(ReplyComposer.prototype, 'headerItems', extendComposerHeaderItems);\n    extend(ReplyComposer.prototype, 'data', extendComposerData);\n    extend(ReplyComposer.prototype, 'view', extendComposerView);\n\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n        if (discussion.attribute('canDeAnonymize')) {\n            items.add('deanonymize', Button.component({\n                icon: 'fas fa-user-secret',\n                onclick: () => {\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.deanonymizeConfirmation')))) {\n                        return;\n                    }\n\n                    discussion.save({\n                        isAnonymous: false,\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.deanonymize')));\n        }\n\n        if (discussion.attribute('canAnonymize')) {\n            items.add('anonymize', Button.component({\n                icon: 'fas fa-user-secret',\n                onclick: () => {\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.anonymizeConfirmation')))) {\n                        return;\n                    }\n\n                    discussion.save({\n                        isAnonymous: true,\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.anonymize')));\n        }\n    });\n\n    extend(PostControls, 'moderationControls', function (items, post) {\n        if (post.attribute('canDeAnonymize')) {\n            items.add('deanonymize', Button.component({\n                icon: 'fas fa-user-secret',\n                onclick: () => {\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.deanonymizeConfirmation')))) {\n                        return;\n                    }\n\n                    post.save({\n                        isAnonymous: false,\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.deanonymize')));\n        }\n\n        if (post.attribute('canAnonymize')) {\n            items.add('anonymize', Button.component({\n                icon: 'fas fa-user-secret',\n                onclick: () => {\n                    if (post.number() === 1) {\n                        if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.firstPostConfirmation')))) {\n                            return;\n                        }\n                    }\n\n                    post.save({\n                        isAnonymous: true,\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.anonymize')));\n        }\n    });\n\n    // Flarum will try to focus the checkbox in ReplyComposer instead of the body. To work around this, we'll temporarily disable the field while this method runs\n    override(Composer.prototype, 'focus', function (original) {\n        const $anonymousCheckbox = this.$('.item-anonymous-posting input');\n\n        $anonymousCheckbox.prop('disabled', true);\n\n        const returnValue = original();\n\n        $anonymousCheckbox.prop('disabled', false);\n\n        return returnValue;\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_extends","assign","target","i","arguments","length","source","apply","this","flarum","core","compat","extendComposerHeaderItems","items","app","helpText","helpTextPosition","add","Switch","className","state","onchange","m","Tooltip","text","icon","extendComposerData","data","isAnonymous","extendComposerView","vdom","Array","isArray","children","forEach","child","index","attrs","indexOf","anonymousAvatar","post","src","attribute","alt","extend","CommentPost","setContent","Model","tooltipText","labelText","PostsUserPage","alteredPost","Post","relationships","user","anonymousUser","PostUser","cardVisible","oncardshow","redraw","oncardhide","ReplyPlaceholder","vdom0","vdom1","vdom2","vdom3","index3","splice","DiscussionListItem","discussion","tag","username","ago","humanTime","createdAt","Link","override","TerminalPost","original","args","lastPost","replyCount","lastPostedUser","lastPostedAt","subtree","check","DiscussionComposer","ReplyComposer","DiscussionControls","Button","onclick","confirm","extractText","save","then","PostControls","number","Composer","$anonymousCheckbox","$","returnValue"],"sourceRoot":""}